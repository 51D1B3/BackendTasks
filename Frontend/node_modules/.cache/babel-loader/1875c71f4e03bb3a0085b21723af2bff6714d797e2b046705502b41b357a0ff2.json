{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport { taskService } from '../services/api';\nexport const useTasks = (initialFilters = {}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [filters, setFilters] = useState(initialFilters);\n  const [meta, setMeta] = useState({\n    total: 0,\n    page: 1,\n    limit: 10,\n    pages: 0\n  });\n  const fetchTasks = useCallback(async (params = {}) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await taskService.getTasks({\n        ...filters,\n        ...params\n      });\n      setTasks(response.data);\n      setMeta(response.meta);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Erreur lors du chargement des tâches');\n    } finally {\n      setLoading(false);\n    }\n  }, [filters]);\n  const createTask = useCallback(async taskData => {\n    try {\n      const response = await taskService.createTask(taskData);\n      await fetchTasks();\n      return response;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      throw new Error(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Erreur lors de la création de la tâche');\n    }\n  }, [fetchTasks]);\n  const updateTask = useCallback(async (id, taskData) => {\n    try {\n      const response = await taskService.updateTask(id, taskData);\n      setTasks(prevTasks => prevTasks.map(task => task._id === id ? response : task));\n      return response;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      throw new Error(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Erreur lors de la mise à jour de la tâche');\n    }\n  }, []);\n  const deleteTask = useCallback(async id => {\n    try {\n      await taskService.deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task._id !== id));\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      throw new Error(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Erreur lors de la suppression de la tâche');\n    }\n  }, []);\n  const toggleTaskStatus = useCallback(async (id, currentStatus) => {\n    const statusMap = {\n      'todo': 'in_progress',\n      'in_progress': 'done',\n      'done': 'todo'\n    };\n    const newStatus = statusMap[currentStatus] || 'todo';\n    return updateTask(id, {\n      status: newStatus\n    });\n  }, [updateTask]);\n  const filteredTasks = useMemo(() => {\n    return tasks.filter(task => {\n      if (filters.status && task.status !== filters.status) return false;\n      if (filters.priority && task.priority !== filters.priority) return false;\n      return true;\n    });\n  }, [tasks, filters]);\n  const taskStats = useMemo(() => {\n    return {\n      total: tasks.length,\n      todo: tasks.filter(t => t.status === 'todo').length,\n      inProgress: tasks.filter(t => t.status === 'in_progress').length,\n      done: tasks.filter(t => t.status === 'done').length,\n      high: tasks.filter(t => t.priority === 'high').length,\n      medium: tasks.filter(t => t.priority === 'medium').length,\n      low: tasks.filter(t => t.priority === 'low').length\n    };\n  }, [tasks]);\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n  return {\n    tasks: filteredTasks,\n    allTasks: tasks,\n    loading,\n    error,\n    meta,\n    filters,\n    setFilters,\n    fetchTasks,\n    createTask,\n    updateTask,\n    deleteTask,\n    toggleTaskStatus,\n    taskStats\n  };\n};\n_s(useTasks, \"U+w1wNNxmjmP4GSJvfW6SZ6ZNi4=\");","map":{"version":3,"names":["useState","useEffect","useCallback","useMemo","taskService","useTasks","initialFilters","_s","tasks","setTasks","loading","setLoading","error","setError","filters","setFilters","meta","setMeta","total","page","limit","pages","fetchTasks","params","response","getTasks","data","err","_err$response","_err$response$data","message","createTask","taskData","_err$response2","_err$response2$data","Error","updateTask","id","prevTasks","map","task","_id","_err$response3","_err$response3$data","deleteTask","filter","_err$response4","_err$response4$data","toggleTaskStatus","currentStatus","statusMap","newStatus","status","filteredTasks","priority","taskStats","length","todo","t","inProgress","done","high","medium","low","allTasks"],"sources":["C:/Users/51D1B3/Documents/GestionTasks/Frontend/src/hooks/useTasks.js"],"sourcesContent":["import { useState, useEffect, useCallback, useMemo } from 'react';\nimport { taskService } from '../services/api';\n\nexport const useTasks = (initialFilters = {}) => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [filters, setFilters] = useState(initialFilters);\n  const [meta, setMeta] = useState({ total: 0, page: 1, limit: 10, pages: 0 });\n\n  const fetchTasks = useCallback(async (params = {}) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await taskService.getTasks({ ...filters, ...params });\n      setTasks(response.data);\n      setMeta(response.meta);\n    } catch (err) {\n      setError(err.response?.data?.message || 'Erreur lors du chargement des tâches');\n    } finally {\n      setLoading(false);\n    }\n  }, [filters]);\n\n  const createTask = useCallback(async (taskData) => {\n    try {\n      const response = await taskService.createTask(taskData);\n      await fetchTasks();\n      return response;\n    } catch (err) {\n      throw new Error(err.response?.data?.message || 'Erreur lors de la création de la tâche');\n    }\n  }, [fetchTasks]);\n\n  const updateTask = useCallback(async (id, taskData) => {\n    try {\n      const response = await taskService.updateTask(id, taskData);\n      setTasks(prevTasks => \n        prevTasks.map(task => task._id === id ? response : task)\n      );\n      return response;\n    } catch (err) {\n      throw new Error(err.response?.data?.message || 'Erreur lors de la mise à jour de la tâche');\n    }\n  }, []);\n\n  const deleteTask = useCallback(async (id) => {\n    try {\n      await taskService.deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task._id !== id));\n    } catch (err) {\n      throw new Error(err.response?.data?.message || 'Erreur lors de la suppression de la tâche');\n    }\n  }, []);\n\n  const toggleTaskStatus = useCallback(async (id, currentStatus) => {\n    const statusMap = {\n      'todo': 'in_progress',\n      'in_progress': 'done',\n      'done': 'todo'\n    };\n    const newStatus = statusMap[currentStatus] || 'todo';\n    return updateTask(id, { status: newStatus });\n  }, [updateTask]);\n\n  const filteredTasks = useMemo(() => {\n    return tasks.filter(task => {\n      if (filters.status && task.status !== filters.status) return false;\n      if (filters.priority && task.priority !== filters.priority) return false;\n      return true;\n    });\n  }, [tasks, filters]);\n\n  const taskStats = useMemo(() => {\n    return {\n      total: tasks.length,\n      todo: tasks.filter(t => t.status === 'todo').length,\n      inProgress: tasks.filter(t => t.status === 'in_progress').length,\n      done: tasks.filter(t => t.status === 'done').length,\n      high: tasks.filter(t => t.priority === 'high').length,\n      medium: tasks.filter(t => t.priority === 'medium').length,\n      low: tasks.filter(t => t.priority === 'low').length\n    };\n  }, [tasks]);\n\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n\n  return {\n    tasks: filteredTasks,\n    allTasks: tasks,\n    loading,\n    error,\n    meta,\n    filters,\n    setFilters,\n    fetchTasks,\n    createTask,\n    updateTask,\n    deleteTask,\n    toggleTaskStatus,\n    taskStats\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}